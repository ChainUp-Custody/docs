# ChainUp MPC Wallet

**ChainUp Custody's** implementation of the **MPC technology** ensures that users' investment assets are under the protection of the highest security level in the market. User's private key will be managed jointly by the user and ChainUp Custody, and the user will have complete control over assets and may use them at any time without limitation. MPC technology not only makes recovery easier but also increases security by **removing the single point of failure of a private key.**



**MPC** allows each co-signing component to audit which of the keys participated in the signing but the nature of the MPC protocol does not require participants to reveal their secret share to others, which means that every party’s input is kept private. In addition, the signature-generating parties are not exposed or visible over the network. MPC addresses the problem of enabling collaboration between different parties while providing trustworthy records and preserving the privacy of their individual data.



#### API mainly provides the following functions:

- Manage sub-wallets and view assets
- Get an estimated gas fee for initiating a transaction
- Initiate a transaction and receive notification of the final status of the transaction
- Complete automatic signature and address generation through **Co-Signer** provided by ChainUp Custody
- Get record details of all transactions



Please contact your dedicated **Business Manager** or **email** to <custody@chainup.com> for **API** information.

# Getting Started

## Access

Follow the instructions below to access ChainUp Custody

<%= image_tag "ejieruzhiyin.png" %>



### Create Account

#### Download MPC Wallet

Method 1：Open the link in your mobile browser：https://custody.chainup.com/download

Method 2： scan the QR code for download:

<%= image_tag "qrCode.png", style:"width: 150px" %>



#### Register MPC Wallet Account

Open the app and register a new account using email OR mobile phone number.

<%= image_tag "elogin.png", style:"width: 250px" %>



### Build MPC Wallet

- There are 2 types of **MPC** wallets: **main wallet** and **sub-wallet**; one main wallet can create multiple sub-wallets;

  
#### Application scenario:

- The main wallet can be used for asset overview of a certain line of business; sub-wallets are assigned to different users of that business line. 
- The main wallet can be used to view and analysis the company's total assets; the sub-wallets are allocated to different business departments.
  
  
  

**Private key password** is used to encrypt and decrypt private key shards. It is very important. For the safety of your assets, please make sure to back it up in time. Failure to back up private key shards and passwords will limit the use of your **MPC wallet** functions.

Your **private key password** is essential for encrypting and decrypting private key shards. It's crucial to ensure its **timely backup** to safeguard your assets. Failure to back up private key shards and passwords may restrict the use of your MPC wallet functions.

- **ChainUp Custody** utilizes a **3-3 signature strategy**. The wallet has a total of 3 private key shards, 2 of which are encrypted and stored in ChainUp HSM, and the other 1 private key shard is stored in the **user's local device**. 

- **You have 100% control over assets**: ChainUp Custody solely provides assistance in managing assets and cannot access user assets. Therefore, it is **crucial** for you to **backup you local private key shard in a timely and secure manner**.

- Private key shards exist in the form of **recovery phrases** for practical reasons.

  

If the wallet function does not meet your needs, please contact your dedicated **Business Manager** or **email** to <custody@chainup.com> for upgrading package. 





## Preparation



### Development Instructions



#### Two pairs of public and private key functions (API mode）

**The first pair of public and private keys**： The developer shall generate a pair of public and private keys in advance when opening the **MPC Wallet** account. The public key (rsa_third_pub) is provided to the platform and the private key is kept by itself. The private key is the only proof for the third-party application to call the wallet service and shall not be disclosed to anyone. When the third party requests the wallet service, the private key is used to encrypt the request parameters. When the platform receives the request, the public key (rsa_third_pub) is used to decrypt the request data.

**The second pair of public and private keys**： After the developer opens the asset management account, the platform will provide the wallet public key (rsa_wallet_pub) to the developer. When the third-party application receives the response data or asynchronous notification of the wallet, it needs to use the public key to decrypt.



#### Domain name and API key (API mode)

| Production domain name(test environment not supported): | [https://openapi.hicoin.vip](https://openapi.hicoin.vip/)    |
| :------------------------------------------------------ | ------------------------------------------------------------ |
| `app_id`                                                | Please get it after creating the wallet                      |
| `rsa_wallet_pub`                                        | Custody system public key; Please create the wallet and get it from the Custody system |
| `rsa_third_prv`                                         | Client private key; Independent generation and preservation  |
| `rsa_third_pub`                                         | Client public key; Autonomous generation; Please create the wallet and configure it to the Custody system |



**RSA public/private key generated address** http://www.metools.info/code/c80.html

Recommended password length：2048

Recommended key format：PKCS#8

Description：

1. Rsa_third_prv is a private key for third-party applications and is used primarily to encrypt request parameters. In a production environment, rsa_third_prv is generated by the developer and the corresponding public key is provided to the platform. To simplify the docking process for developers, a set of third-party public and private keys is directly provided here to facilitate quick docking for developers.
2. Test environment docking is not supported at present, please register to create a wallet according to **Access Guidelines** , and get the API related information of the production environment.

### Account preparation

**The developer prepares the following information：**

1）Generate a pair of public and private keys and provide the public key to the platform;

2）IP of **third-party** application server and Co-Signer server;

3）**Receiving** and **Transfer** callback notification address;

4）Domain name of the **Co-signer Server**



Contact relevant personnel of the platform to provide the above information. The platform prepares an asset management account for you and provides you with the following information:

1）Unique identification of the merchant：`app_id`；

2）The wallet public key：`rsa_wallet_pub`.



### Interface Process

Documentation is the interface that the wallet service provides to third-party applications.



The interface providers in the following documents are referred to as **wallet services**，and the interface callers are referred to as **third-party applications**. When the third-party application requests the wallet service, it encrypts the request parameters through the **RSA** algorithm and decrypts the response data after receiving the wallet service



### Interface Rules


| Transfer mode:               | https(HTTP is temporarily used in the test environment)      |
| :--------------------------- | ------------------------------------------------------------ |
| Signature field:             | All Required fields, except the Sign field, need to be signed |
| The response status code is: | 0, indicating successful processing, and non-0 indicates request error or system exception |
| Request address:             | domain name + interface address                              |
| Encryption algorithm:        | RSA                                                          |





# API list

## Overview 

> Request Example

```java
POST /api/mpc/sub_wallet/assets

app_id=2128eb8de9e932a4376909f3d69424cc&data=SWYYr-LBVAmaS0eq8n-CUT_nHkM3OBxyWOsImMTe41UaqAoYI2ZghmaphXHov-7hsRsVmOhyPqC-JFuRGvonJKFd2Jirxv6Vn_8V40r_MMYTkhqcviQbZWYW5xX8Ai8CIpqas9fIWVDIYA_NKBl0UCJpwGxscxLNpjq5Z8-BTyIYDsVBquM9zEQGBCfcA7szD9n2fN_loSkoexlwqV8wg9HIZO5yQ6utZ_Kt0lNDQQb8zn8BwfAvsEsbJlOINUAqhxh1vV_AJ4bXn2uYx8TaYcBht-n_ZcBdxIDt975dbOFUiH-oCzIuDi1oLDtb4EylfCvhU5E4ozel_lQ-6cyIG0Dqiiyx0RFFOCJzPSXIoV031pvoa8pTCpkWklh8mRw1rylBgeZtqSxpnJO2_u2RIlXq6Hs8Yly9CmhIXaSrUgPir0h6xVxlf4VC6PFVCkiiTlp0kZ_H_UbKm0nUis3v3U2sflWJ2C449waSrikhuxVrFAQ6PQmrFVCAE6MYXNrFXJQuam2HAIQNSGbFQjspw8b_bXyfyZMGZ3K2oBC4I_v3eETTdPe0pfSNJb-5g37K0tOAr_UFbWK8pkC8yl56fSjn8tcR3yCRWwoi8jxTcUBiswTtvXZtzgG4dyzkaHXjsZjSGiywXSqP76VZWlyOmAx6IDSViLcPLPISdU3ruCI
```


### Common Request Parameters

| Param  | Type   | Required | Description                                                  |
| ------ | ------ | -------- | ------------------------------------------------------------ |
| app_id | String | optional | merchant unique identifier                                   |
| data   | String | optional | encrypted String, decrypted format is defined as `Decrypted Request Parameters` |



### Request Example


#### HTTP Request

`POST/api/mpc/sub_wallet/assets`










### Common Response Parameters

| Param | Type   | Required | Description                                                  |
| ----- | ------ | -------- | ------------------------------------------------------------ |
| data  | String | optional | encrypted String decrypted format is defined as `Decrypted Response Parameters` |



> Response Example

```java
{
    "data": "SWYYr-LBVAmaS0eq8n-CUT_nHkM3OBxyWOsImMTe41UaqAoYI2ZghmaphXHov-7hsRsVmOhyPqC-JFuRGvonJKFd2Jirxv6Vn_8V40r_MMYTkhqcviQbZWYW5xX8Ai8CIpqas9fIWVDIYA_NKBl0UCJpwGxscxLNpjq5Z8-BTyIYDsVBquM9zEQGBCfcA7szD9n2fN_loSkoexlwqV8wg9HIZO5yQ6utZ_Kt0lNDQQb8zn8BwfAvsEsbJlOINUAqhxh1vV_AJ4bXn2uYx8TaYcBht-n_ZcBdxIDt975dbOFUiH-oCzIuDi1oLDtb4EylfCvhU5E4ozel_lQ-6cyIG0Dqiiyx0RFFOCJzPSXIoV031pvoa8pTCpkWklh8mRw1rylBgeZtqSxpnJO2_u2RIlXq6Hs8Yly9CmhIXaSrUgPir0h6xVxlf4VC6PFVCkiiTlp0kZ_H_UbKm0nUis3v3U2sflWJ2C449waSrikhuxVrFAQ6PQmrFVCAE6MYXNrFXJQuam2HAIQNSGbFQjspw8b_bXyfyZMGZ3K2oBC4I_v3eETTdPe0pfSNJb-5g37K0tOAr_UFbWK8pkC8yl56fSjn8tcR3yCRWwoi8jxTcUBiswTtvXZtzgG4dyzkaHXjsZjSGiywXSqP76VZWlyOmAx6IDSViLcPLPISdU3ruCI"
}

```





### Decrypted Response Parameters

| Param | Type   | Required | Description                                                  |
| ----- | ------ | -------- | ------------------------------------------------------------ |
| code  | String | Required | status code                                                  |
| msg   | String | Required | description of the response result                           |
| data  | String | optional | the specific response data, the data structure is defined as `Response Data Parameters` |



### Encryption and Decryption Mode

The values of the request parameter DATA and the response field DATA are both encrypted by RSA and encrypted by **base64urlsafe**

<aside class="notice">
*Matters needing attention*
<br/>
<br/>
1. There are two symbols + and/that are escaped directly by URL in Base64 traditional encoding. Therefore, if we want to transfer these encoded strings through URL, we need to do traditional Base64 encoding first, then replace + and/with two characters - _ respectively, and do the opposite action decoding at the receiving end. 
<br/>
<br/>
2. RSA encryption and decryption using segmented encryption
</aside>



## Wallet

### Get Supported Main Chains

Get the supported MPC main chain coins and the MPC main chain coins opened in ChainUp Custody.

#### HTTP Request

`GET /api/mpc/wallet/open_coin`

#### Request Parameters

| Param    | Type   | Required | Description       |
| :------- | :----- | :------- | :---------------- |
| time     | long   | Yes      | Current timestamp |
| charset  | String | Yes      | Encoding format, typically "utf-8" |


> Response：

```json
{
    "open_main_chain": [
        {
            "coin_net": "BTC",
            "symbol": "BTC",
            "symbol_alias": "BTC",
            "support_acceleration": false
        }
    ],
    "support_main_chain": [
        {
            "coin_net": "BTC",
            "if_open_chain": true,
            "symbol": "BTC",
            "symbol_alias": "BTC",
            "support_acceleration": false
        }
    ]
}
```

#### Response Data Parameters 

| Param              | Type    | Required | Description                                           |
| :----------------- | :------ | :------- | :---------------------------------------------------- |
| open_main_chain    | Array   | No       | Opened main chains in the wallet                       |
| coin_net           | String  | No       | Coin network, e.g., ETH                               |
| symbol             | String  | Yes      | Unique identifier for the coin, used for transfers     |
| symbol_alias       | String  | No       | Real name of the coin, e.g., USDT                      |
| support_acceleration | Boolean | Yes      | Indicates if acceleration is supported (true/false)      |
| support_main_chain | Array   | No       | Supported main chains in MPC                           |
| coin_net           | String  | No       | Coin network, e.g., ETH                               |
| symbol             | String  | Yes      | Unique identifier for the coin, used for transfers     |
| symbol_alias       | String  | No       | Real name of the coin, e.g., USDT                      |
| if_open_chain      | Boolean | Yes      | Indicates if the main chain is opened (false/true)     |
| support_acceleration | Boolean | Yes      | Indicates if acceleration is supported (true/false)      |


### Get MPC Coin Details

Get the details of MPC wallet main chain coins and tokens supported by ChainUp Custody

#### HTTP Request

`GET /api/mpc/coin_list`

#### Request Parameters

| Param         | Type   | Required | Description                 |
| :------------ | :----- | :------- | :-------------------------- |
| time          | long   | Yes      | Current timestamp           |
| charset       | String | Yes      | Encoding format, typically "utf-8" |
| symbol        | String | No       | Unique identifier for the coin, used for transfers, e.g., USDTERC20 |
| base_symbol   | String | No       | Unique identifier for the base coin of the main chain, used for transfers, e.g., ETH |


> Response：

```json
[
    {
        "address_regex":".*",
        "address_tag_regex":"",
        "base_symbol":"BSC",
        "coin_net":"BSC",
        "contract_address":"0xe9e7cea3dedca5984780bafc599bd69add087d56",
        "decimals":"18",
        "deposit_confirmation":"1",
        "explorer":"https://www.bscscan.com/address/",
        "icon":"",
        "if_open_chain":true,
        "name":"BUSD Token;BSC;BUSD",
        "real_symbol":"BUSD",
        "support_memo":"0",
        "support_token":"0",
        "symbol":"BUSD",
        "symbol_alias":"BUSD",
        "support_acceleration": true
    }
]
```

#### Response Data Parameters 

| Param                | Type     | Required | Description                                      |
| :------------------- | :------- | :------- | :----------------------------------------------- |
| symbol               | String   | Yes      | Unique identifier of the coin, used for transfers, e.g., BUSD |
| symbol_alias         | String   | Yes      | Alias of the coin in Custody                      |
| real_symbol          | String   | Yes      | Name of the coin on the blockchain                |
| base_symbol          | String   | Yes      | Unique identifier of the base coin of the main chain, used for transfers, e.g., BSC |
| coin_net             | String   | No       | Coin network                                      |
| contract_address     | String   | No       | Contract address supported by MPC main chain       |
| deposit_confirmation | String   | Yes      | Number of confirmations for deposits               |
| explorer             | String   | No       | Blockchain explorer URL                           |
| icon                 | String   | Yes      | Coin icon                                         |
| if_open_chain        | Boolean  | Yes      | Indicates if the main chain is open (false/true)   |
| decimals             | String   | Yes      | Coin precision                                   |
| support_memo         | String   | Yes      | Indicates if memo is supported (0:not supported, 1:supported) |
| support_token        | String   | Yes      | Indicates if token coins are supported (0:not supported, 1:supported for main chain coins, empty for tokens) |
| address_tag_regex    | String   | Yes      | Address tag regex pattern                         |
| address_regex        | String   | Yes      | Address regex pattern                             |
| support_acceleration | Boolean  | Yes      | Indicates if acceleration is supported            |





## Sub-wallet (user)




### Create a sub-wallet

Pass in the specified sub-wallet name to create a new sub-wallet for the wallet

#### HTTP Request

`POST /api/mpc/sub_wallet/create`



#### Decrypted Request Parameters 

| Param           | Type   | Requried | Description                                                  |
| :-------------- | :----- | :------- | :----------------------------------------------------------- |
| sub_wallet_name | String | Yes      | Name of sub-wallet, up to 50 characters. No duplicate names. Example: mpc mining pool |
| sub_wallet_type  | Integer| No      | Type of sub-wallet. 1: Asset sub-wallet, 2: web3 sub-wallet (if not specified, the default sub-wallet type is web3)|

> Response：

```json
{
    "sub_wallet_id": 10234122
}
```


#### Response Data Parameters 

| Param         | Type    | Requried | Description   |
| :------------ | :------ | :------- | :------------ |
| sub_wallet_id | Integer | Yes      | Sub wallet id |







### Get sub-wallet address

Obtain the receiving address under the specified sub-wallet and coin

#### HTTP Request

`POST /api/mpc/sub_wallet/get_address`



#### Decrypted Request Parameters

| Param         | Type   | Requried | Description                                           |
| :------------ | :----- | :------- | :---------------------------------------------------- |
| sub_wallet_id | Integer | Yes      | Sub wallet id      |
| symbol        | String | Yes      | The unique identifier of the coin, example: USDTERC20 |

> Response

```json
{ 
    "address":"0xd5b688639ef10ac7fb8ad0156eb0ae025dd03b86"
}
```

#### Response Data Parameters 

| Param   | Type   | Requried | Description       |
| :------ | :----- | :------- | :---------------- |
| address | String | Yes      | receiving address |





### Get sub-wallet assets

Get the account assets under the specified sub-wallet and coin.

#### HTTP Request

`GET /api/mpc/sub_wallet/assets`



#### Decrypted Request Parameters 

| Param         | Type   | Requried | Description                                           |
| :------------ | :----- | :------- | :---------------------------------------------------- |
| symbol        | String | Yes      | The unique identifier of the coin, example: USDTERC20 |
| sub_wallet_id | Integer | Yes      | Sub wallet id                                         |

> Response

```json
{
    "normal_balance":"1.23",
    "receive_address":"0xd5b688639ef10ac7fb8ad0156eb0ae025dd03b86",
    "lock_balance":"0.77"
}
```

#### Response Data Parameters 

| Param             | Type   | Requried | Description       |
| :---------------- | :----- | :------- | :---------------- |
| receiving_address | String | Yes      | receiving address |
| normal_balance    | String | Yes      | Available balance |
| lock_balance      | String | Yes      | Freeze balance    |







### Modify the Display Status

Specify the display status of the sub-wallet on the APP client, if it is not displayed, the transaction cannot be initiated on the APP.



#### HTTP Request

`POST /api/mpc/sub_wallet/change_show_status`



#### Decrypted Request Parameters 

| Param           | Type   | Requried | Description                                              |
| :-------------- | :----- | :------- | :------------------------------------------------------- |
| sub_wallet_ids  | String | Yes      | A string of multiple sub-wallet ids, separated by commas |
| app_show_status | String | Yes      | `1` show ,`2` don't show                                 |



#### Response Data Parameters 


None





## Transfer





### Initiate a transfer



#### HTTP Request

`POST /api/mpc/billing/transfer`



#### Decrypted Request Parameters 

| Param         | Type   | Requried | Description                                                  |
| :------------ | :----- | :------- | :----------------------------------------------------------- |
| sub_wallet_id | Integer | Yes      | Sub wallet id                                                |
| symbol        | String | Yes      | The unique identifier of the coin, example: USDTERC20        |
| address_to    | String | Yes      | transfer address                                             |
| memo          | String | No       | transfer address memo, Memo type can be filled in if available,  example: 123321 |
| amount        | String | Yes      | transfer amount                                              |
| request_id    | String | Yes      | The unique identifier for transferring coins                 |
| remark        | String | No       | transfer remarks                                             |
| fee_rate      | String | No       | Fee rate for BTC series; Note: Do not pass along with other series parameters |
| size          | String | No       | Size in bytes for BTC series; Note: Do not pass along with other series parameters |
| gas_price     | String | No       | Gas recommended price for ETH series; Note: Do not pass along with other series parameters |
| gas_limit     | String | No       | Gas limit for ETH series; Note: Do not pass along with other series parameters |
| fee           | String | No       | Fee for other series such as DOT and TRX; Note: Do not pass along with other series parameters (except for gas_limit, e.g., ATOM) |



> Response

```json
{
    "transfer_id": 12345
}
```

#### Response Data Parameters 

| Param       | Type    | Requried | Description |
| :---------- | :------ | :------- | :---------- |
| transfer_id | Integer | Yes      | transfer id |






### Estimated Gas Fee

Obtain the estimated miner fee required for transfer. 



#### HTTP Request

`GET /api/mpc/billing/gas_estimate`

#### Decrypted Request Parameters 

| Param  | Type   | Requried | Description                                                  |
| :----- | :----- | :------- | :----------------------------------------------------------- |
| from   | String | Yes      | from account address                                         |
| to     | String | Yes      | to  account address                                          |
| memo   | String | No       | to  account address memo, Memo type can be filled in if available,  example: 123321 |
| symbol | String | Yes      | The unique identifier of the coin, example: USDTERC20        |
| amount | String | Yes      | amount                                                       |

> Response


```json
{
    "gas_limit":0,
    "fee_unit":"Gwei",
    "gas_price1":"0",
    "fee":"0.00159",
    "gas_price2":"0",
    "gas_price3":"0",
}
```


#### Response Data Parameters 


| Param     | Type    | Required | Description                                     |
|----------------|---------|----------|-------------------------------------------------|
| fee_unit       | String  | Yes      | Fee unit, e.g., Gwei                            |
| fee_rate1      | String  | No       | Fee rate tier 1 for BTC series                   |
| fee_rate2      | String  | No       | Fee rate tier 2 for BTC series                   |
| fee_rate3      | String  | No       | Fee rate tier 3 for BTC series                   |
| size           | Long    | Yes      | Size in bytes for BTC series (parameter value cannot be modified) |
| gas_limit      | Long    | No       | Gas limit for ETH series (also available for some other series like ATOM) |
| gas_price1     | Long    | No       | Gas recommended price tier 1 for ETH series      |
| gas_price2     | Long    | No       | Gas recommended price tier 2 for ETH series      |
| gas_price3     | Long    | No       | Gas recommended price tier 3 for ETH series      |
| fee            | String  | No       | Fee for other series such as DOT and TRX, using the 'fee' field for transaction fees |
| fee_changeable | Boolean | No       | For other series such as DOT and TRX, indicates whether the 'fee' parameter value can be changed. Set to true for modifiable and false for non-modifiable values |




### Speed Up transfer

After the transfer signature is completed, if the transaction fee has not been process on the chain for a long time due to insufficient gas fee, you can re-specify a higher gas fee to speed up the process on the blockchain.



#### HTTP Request

`POST /api/mpc/billing/withdraw_pending`



#### Decrypted Request Parameters 

| Param   | Type    | Required | Description                                          |
|---------------|---------|----------|------------------------------------------------------|
| withdraw_id   | Integer | Yes      | Transfer ID                                          |
| fee_rate      | String  | No       | Fee rate for BTC series; Note: Do not pass along with other series parameters |
| size          | String  | No       | Size in bytes for BTC series; Note: Do not pass along with other series parameters |
| gas_price     | String  | No       | Gas recommended price for ETH series; Note: Do not pass along with other series parameters |
| gas_limit     | String  | No       | Gas limit for ETH series; Note: Do not pass along with other series parameters |
| fee           | String  | No       | Fee for other series such as DOT and TRX; Note: Do not pass along with other series parameters (except for gas_limit, e.g., ATOM) |


#### Response Data Parameters 



None




### Get transfer records

Get all sub-wallet transfer records under the main wallet, and return up to 100 records



#### HTTP Request

`GET /api/mpc/billing/withdraw_list`



#### Decrypted Request Parameters 

| Param | Type   | Requried | Description                                  |
| :---- | :----- | :------- | :------------------------------------------- |
| ids   | String | Yes      | many `request_id`string，separated by commas |


> Response

```json
[
    {
        "symbol":"ETH",
        "amount":"0.0000111",
        "real_fee":"0",
        "wihdraw_source":2,
        "fee":"0.0002782353",
        "address_to":"0xc70d1eebb7c687ec8d56bead73f104d41e6e0bda",
        "memo": "123321",
        "created_at":1672304978000,
        "txid":"0x8e6beba81b90835fc9fcd40a2bdca33243c7c3b81ac765c240837d4810874a55",
        "confirmations":0,
        "contract_address":"",
        "sub_wallet_id":"123",
        "address_from":"0x5EDc9177997Bf6B4db559A5C184051858B3B3704",
        "fee_symbol":"ETH",
        "updated_at":1672318660000,
        "base_symbol":"",
        "id":242,
        "request_id":"57fdc296-1e14-47fa-a99d-5e86f8e51008",
        "status":1200
    }
]
```


#### Response Data Parameters 

| Param            | Type    | Requried | Description                                                  |
| :--------------- | :------ | :------- | :----------------------------------------------------------- |
| id               | Integer | Yes      | transfer id                                                  |
| request_id       | Integer  | Yes      | The unique identifier for transferring coins                 |
| sub_wallet_id    | Integer | Yes      | Sub wallet id                                                |
| symbol           | String  | Yes      | The unique identifier of the coin                            |
| amount           | String  | Yes      | transfer amount                                              |
| fee_symbol       | String  | Yes      | gas fee coins                                                |
| fee              | String  | Yes      | gas fee                                                      |
| real_fee         | String  | Yes      | The actual gas fee consumed                                  |
| created_at       | Long    | Yes      | Creation time timestamp                                      |
| updated_at       | Long    | Yes      | Modification time timestamp                                  |
| address_from     | String  | Yes      | from account address                                         |
| address_to       | String  | Yes      | to account address                                           |
| memo             | String  | No       | to account address memo                                      |
| txid             | String  | Yes      | Transaction hash                                             |
| confirmations    | Integer | Yes      | Number of block confirmations，example：10                   |
| status           | Integer | Yes      | transfer status: `1000` awaiting approval, `1100` Approved while awaiting signature, `1200` Payment in progress, `2000`Payment completed, `2100` Not Approved, `2200` Rejected, `2300` Transaction discarded, `2400`Payment failed |
| transfer_source  | Integer | Yes      | transfer Type： `1`app, `2`openapi                           |
| base_symbol      | String  | No       | The unique identifier of the main chain of the coin to be transferred, for example: ETH |
| contract_address | String  | No       | transfer coin's  contract address                            |








### Synchronize transfer records

Get all sub-wallet transfer records under the main wallet, and return up to 100 records



#### HTTP Request

`GET /api/mpc/billing/sync_transfer_list`



#### Decrypted Request Parameters 

| Param  | Type   | Requried | Description                                |
| :----- | :----- | :------- | :----------------------------------------- |
| max_id | String | Yes      | transfer record initial id, example: 12345 |

> Response

```json
[
    {
        "symbol":"ETH",
        "amount":"0.0000111",
        "real_fee":"0",
        "wihdraw_source":2,
        "fee":"0.0002782353",
        "address_to":"0xc70d1eebb7c687ec8d56bead73f104d41e6e0bda",
        "memo": "123321",
        "created_at":1672304978000,
        "txid":"0x8e6beba81b90835fc9fcd40a2bdca33243c7c3b81ac765c240837d4810874a55",
        "confirmations":0,
        "contract_address":"",
        "sub_wallet_id":"123",
        "address_from":"0x5EDc9177997Bf6B4db559A5C184051858B3B3704",
        "fee_symbol":"ETH",
        "updated_at":1672318660000,
        "base_symbol":"",
        "id":242,
        "request_id":"57fdc296-1e14-47fa-a99d-5e86f8e51008",
        "status":1200
    }
]
```

#### Response Data Parameters 

| Param            | Type    | Requried | Description                                                  |
| :--------------- | :------ | :------- | :----------------------------------------------------------- |
| id               | Integer | Yes      | transfer id                                                  |
| request_id       | String  | Yes      | The unique identifier for transferring coins                 |
| sub_wallet_id    | Integer | Yes      | Sub wallet id                                                |
| symbol           | String  | Yes      | The unique identifier of the coin, example: USDTERC20        |
| amount           | String  | Yes      | transfer amount                                              |
| fee_symbol       | String  | Yes      | gas fee coins                                                |
| fee              | String  | Yes      | gas fee                                                      |
| real_fee         | String  | Yes      | The actual gas fee consumed                                  |
| created_at       | Long    | Yes      | Created time timestamp                                       |
| updated_at       | Long    | Yes      | Modified time timestamp                                      |
| address_from     | String  | Yes      | from account address                                         |
| address_to       | String  | Yes      | to account address                                           |
| memo             | String  | No       | to account address memo                                      |
| txid             | String  | Yes      | Transaction hash                                             |
| confirmations    | Integer | Yes      | Number of block confirmations                                |
| status           | Integer | Yes      | transfer status: `1000` awaiting approval, `1100` Approved while awaiting signature, `1200` Payment in progress, `2000`Payment completed, `2100` Not Approved, `2200` Rejected, `2300` Transaction discarded, `2400`Payment failed |
| transfer_source  | Integer | Yes      | transfer Type： `1`app, `2`openapi                           |
| base_symbol      | String  | No       | The unique identifier of the main chain of the coin to be transferred, for example: ETH |
| contract_address | String  | No       | transfer coin's  contract address                            |








## Received

### Get Receiving records

Get all sub-wallet receiving records under the main wallet, and return up to 100 records



#### HTTP Request

`GET/api/mpc/billing/receive_list`



#### Decrypted Request Parameters 

| Param | Type   | Requried | Description                                                  |
| :---- | :----- | :------- | :----------------------------------------------------------- |
| ids   | String | Yes      | A string of multiple ids, separated by commas, example: 123,345 |


> Response

```json
[
    {
        "symbol":"ETH",
        "amount":"1",
        "address_to":"0x33648fACAD6CECA85cf717841Ddd87c40B12438F",
        "memo": "123321",
        "created_at":1672107533000,
        "txid":"0xfd0b04024bd1d849ba69e301733194154cb42a05c1dd32065367d8c6336af711",
        "confirmations":20,
        "contract_address":"",
        "sub_wallet_id":"123",
        "address_from":"0xc70d1eebb7c687ec8d56bead73f104d41e6e0bda",
        "updated_at":1672323030000,
        "base_symbol":"",
        "id":43,
        "status":2000
    }
]
```


#### Response Data Parameters 

| Param            | Type    | Requried | Description                                                  |
| :--------------- | :------ | :------- | :----------------------------------------------------------- |
| id               | Integer | Yes      | Receiving id                                                 |
| sub_wallet_id    | Integer | Yes      | Sub wallet id                                                |
| symbol           | String  | Yes      | The unique identifier of the coin, example: USDTERC20        |
| amount           | String  | Yes      | receiving amount                                             |
| created_at       | Long    | Yes      | Created time timestamp                                       |
| updated_at       | Long    | Yes      | Modified time timestamp                                      |
| address_from     | String  | Yes      | transfer from address                                        |
| address_to       | String  | Yes      | receiving address                                            |
| memo             | String  | No       | receiving address memo，example：123321                      |
| txid             | String  | Yes      | Transaction hash                                             |
| confirmations    | Integer | Yes      | Number of block confirmations，example：10                   |
| status           | Integer | Yes      | receiving status: `1000` unconfirmed, `1100` confirmed (transaction block confirmed), `2000` completed (shown at account), `3000` abnormal |
| base_symbol      | String  | No       | The unique identifier of the main chain of the coin to be received, example：ETH |
| contract_address | String  | No       | received coin's contract address                             |




### Synchronous Receiving record

Get all sub-wallet receiving records under the main wallet, and return up to 100 records

#### HTTP Request

`GET /api/mpc/billing/sync_deposit_list`



#### Decrypted Request Parameters 

| Param  | Type   | Requried | Description                               |
| :----- | :----- | :------- | :---------------------------------------- |
| max_id | String | Yes      | receiving record initial id，example：100 |



> Response

```json
[
    {
        "symbol":"ETH",
        "amount":"1",
        "address_to":"0x33648fACAD6CECA85cf717841Ddd87c40B12438F",
        "memo": "123321",
        "created_at":1672107533000,
        "txid":"0xfd0b04024bd1d849ba69e301733194154cb42a05c1dd32065367d8c6336af711",
        "confirmations":20,
        "contract_address":"",
        "sub_wallet_id":"123",
        "address_from":"0xc70d1eebb7c687ec8d56bead73f104d41e6e0bda",
        "updated_at":1672323030000,
        "base_symbol":"",
        "id":43,
        "status":2000
    }
]
```


#### Response Data Parameters 


| Param            | Type    | Requried | Description                                                  |
| :--------------- | :------ | :------- | :----------------------------------------------------------- |
| id               | Integer | Yes      | receivingid                                                  |
| sub_wallet_id    | Integer | Yes      | Sub wallet id                                                |
| symbol           | String  | Yes      | The unique identifier of the coin, example: USDTERC20        |
| amount           | String  | Yes      | receiving amount                                             |
| created_at       | Long    | Yes      | Created time timestamp                                       |
| updated_at       | Long    | Yes      | Modified time timestamp                                      |
| address_from     | String  | Yes      | transfer from address                                        |
| address_to       | String  | Yes      | receiving address                                            |
| memo             | String  | No       | receiving address memo，example：123321                      |
| txid             | String  | Yes      | Transaction hash                                             |
| confirmations    | Integer | Yes      | Number of block confirmations，example：10                   |
| status           | Integer | Yes      | receiving status: `1000` unconfirmed, `1100` confirmed (transaction block confirmed), `2000` completed (shown at account), `3000` abnormal |
| base_symbol      | String  | No       | The unique identifier of the main chain of the coin to be received, example：ETH |
| contract_address | String  | No       | received coin's contract address                             |


## Web3 Transaction

### Create Web3 Transaction

Create a Web3 transaction.

#### HTTP Request

`POST /api/mpc/web3/trans/create`



#### Request Parameters

| Param          | Type    | Required | Description                              |
| ------------------ | ------- | -------- | ---------------------------------------- |
| request_id         | String  | Yes      | Unique identifier for the transaction     |
| main_chain_symbol  | String  | Yes      | Main chain coin symbol (unique identifier) |
| sub_wallet_id      | Integer | Yes      | Sub-wallet ID                             |
| interactive_contract | String | Yes      | Interactive contract                      |
| amount             | String  | Yes      | Transaction amount (-1 for infinite)      |
| gas_price          | String  | Yes      | Gas fee，unit：Gwei                       |
| gas_limit          | String  | Yes      | Gas limit fee                            |
| input_data         | String  | Yes      | Hexadecimal data for contract transaction |
| trans_type         | Integer | Yes      | 0: Authorization transaction, 1: Other transaction. If 0, the amount field is invalid. |
| dapp_name          | String  | No       | Dapp name                                 |
| dapp_url           | String  | No       | Dapp URL                                  |
| dapp_img           | String  | No       | Dapp image                                |

> Response 

```json
{
     "trans_id": 198012
}
```

#### Response Data Parameters 

| Parameter         | Type    | Required | Description               |
| ----------------- | ------- | -------- | ------------------------- |
| trans_id          | Integer | Yes      | Web3 transaction ID       |



### Web3 Transaction Acceleration

When a transfer is signed but has not been confirmed on the blockchain for a long time due to insufficient fees, it can be accelerated by specifying a higher fee.

#### HTTP Request

`POST /api/mpc/web3/pending`



#### Request Parameters

| Param | Type   | Required | Description        |
| ----------- | ------ | -------- | ------------------ |
| trans_id    | Integer| Yes      | Web3 transaction ID |
| gas_price   | String | Yes      | Gas price, unit：Gwei  |
| gas_limit   | String | Yes      | Gas limit          |


#### Response Data Parameters 

None



### Get Web3 Transaction Records

Get all Web3 transaction records under a wallet, maximum of 100 records.

#### HTTP Request

`GET /api/mpc/web3/trans_list`



#### Request Parameters

| Param   | Type   | Required | Description                  |
| ----------- | ------ | -------- | ---------------------------- |
| ids         | String | Yes      | Comma-separated `request_id` strings |

> Response 

```json
[
    {
        "id":435,
        "request_id":"0000000003",
        "sub_wallet_id":1000895,
        "txid":"0xbc87e486d28df91fe715436415bab38cc1cf5e4b23fbb8497ff688b823c08ba7",
        "symbol":"",
        "main_chain_symbol":"HECO",
        "amount":"0",
        "fee_symbol":"HECO",
        "fee":"0.00018",
        "real_fee":"0.000107277",
        "created_at":1684220373000,
        "updated_at":1684222558000,
        "address_from":"0xd5c2d98BF2d205039F62ee40c9A7ab1B36125d6d",
        "address_to":"",
        "confirmations":4,
        "input_data":"0xca718c65",
        "interactive_contract":"0xe012F3957226894B1a2a44b3ef5070417a069dC2",
        "status":2400,
        "trans_source":2
    }
]
```



#### Response Data Parameters 

| Parameter            | Type    | Required | Description                  |
| -------------------- | ------- | -------- | ---------------------------- |
| id                   | Integer | Yes      | Web3 transaction ID          |
| request_id           | String  | Yes      | Unique identifier for the transaction |
| sub_wallet_id        | Integer | Yes      | Sub-wallet ID                |
| txid                 | String  | No       | Transaction hash             |
| symbol               | String  | No       | Transaction currency         |
| main_chain_symbol    | String  | Yes      | Main chain coin symbol (unique identifier), e.g., ETH |
| amount               | String  | Yes      | Transaction amount. -1 indicates infinite |
| fee_symbol           | String  | Yes      | Fee currency, e.g., ETH      |
| fee                  | String  | Yes      | Fee                          |
| real_fee             | String  | Yes      | Actual fee consumed          |
| created_at           | String  | Yes      | Creation timestamp           |
| updated_at           | String  | Yes      | Modification timestamp       |
| address_from         | String  | Yes      | Transaction source address   |
| address_to           | String  | Yes      |

 Transaction destination address |
| interactive_contract | String  | Yes      | Interactive contract         |
| confirmations        | Integer | Yes      | Confirmations                |
| input_data           | String  | Yes      | Hexadecimal data for contract transaction |
| status               | Integer | Yes      | Transaction status: 1100 Pending Signature, 1200 Payment Processing, 2000 Payment Complete, 2100 Approval Rejected, 2200 Rejected, 2300 Transaction Discarded, 2400 Payment Failed |
| trans_source         | Integer | Yes      | Transaction type: 1. App, 2. Open API |

### Sync Web3 Transaction Records

Get all Web3 transaction records under a wallet, maximum of 100 records.

#### HTTP Request

`GET /api/mpc/web3/sync_trans_list`



#### Request Parameters

| Parameter   | Type   | Required | Description                  |
| ----------- | ------ | -------- | ---------------------------- |
| max_id      | String | Yes      | Starting ID of Web3 transactions |

> Response

```json
[
    {
        "id":435,
        "request_id":"0000000003",
        "sub_wallet_id":1000895,
        "txid":"0xbc87e486d28df91fe715436415bab38cc1cf5e4b23fbb8497ff688b823c08ba7",
        "symbol":"",
        "main_chain_symbol":"HECO",
        "amount":"0",
        "fee_symbol":"HECO",
        "fee":"0.00018",
        "real_fee":"0.000107277",
        "created_at":1684220373000,
        "updated_at":1684222558000,
        "address_from":"0xd5c2d98BF2d205039F62ee40c9A7ab1B36125d6d",
        "address_to":"",
        "input_data":"0xca718c65",
        "interactive_contract":"0xe012F3957226894B1a2a44b3ef5070417a069dC2",
        "confirmations":4,
        "status":2400,
        "trans_source":2
    }
]
```



####  Response Data Parameters 

| Parameter            | Type    | Required | Description                  |
| -------------------- | ------- | -------- | ---------------------------- |
| id                   | Integer | Yes      | Web3 transaction ID          |
| request_id           | String  | Yes      | Unique identifier for the transaction |
| sub_wallet_id        | Integer | Yes      | Sub-wallet ID                |
| txid                 | String  | No       | Transaction hash             |
| symbol               | String  | No       | Transaction currency         |
| main_chain_symbol    | String  | Yes      | Main chain coin symbol (unique identifier), e.g., ETH |
| amount               | String  | Yes      | Transaction amount. -1 indicates infinite |
| fee_symbol           | String  | Yes      | Fee currency, e.g., ETH      |
| fee                  | String  | Yes      | Fee                          |
| real_fee             | String  | Yes      | Actual fee consumed          |
| created_at           | String  | Yes      | Creation timestamp           |
| updated_at           | String  | Yes      | Modification timestamp       |
| address_from         | String  | Yes      | Transaction source address   |
| address_to           | String  | Yes      | Transaction destination address |
| interactive_contract | String  | Yes      | Interactive contract         |
| confirmations        | Integer | Yes      | Confirmations                |
| input_data           | String  | Yes      | Hexadecimal data for contract transaction |
| status               | Integer | Yes      | Transaction status: 1100 Pending Signature, 1200 Payment Processing, 2000 Payment Complete, 2100 Approval Rejected, 2200 Rejected, 2300 Transaction Discarded, 2400 Payment Failed |
| trans_source         | Integer | Yes      | Transaction type: 1. App, 2. Open API |



## NFT

### Get NFT Information

Retrieve NFT data such as images and names.

#### HTTP Request

`POST /api/nft/info`

#### Request Data Parameter
| Param            | Type   | Required | Description                                 |
| :--------------- | :----- | :------- | :------------------------------------------ |
| base_symbol      | String | Yes      | Base chain symbol                           |
| contract_address | String | Yes      | NFT contract address                        |
| token_id         | String | Yes      | NFT token ID                                |

> Response Example

```json
{
     "base_symbol": "bsc",
     "contract_address": "0xC2A19349D5f451071C3085B90f531D19F190FF21",
     "token_id": "75000000000000000281",
     "nft_name": "#75000000000000000281",
     "image": "https://ipfs.io/ipfs/QmXCaMVmRWviaFtRpEH7dJXrJav8dsJdGcsj7M8NpgAgPW",
     "image_type": ".svg",
     "is_video": false,
}
```

#### Response Parameter

| Param         | Type    | Required | Description                                |
| :------------ | :------ | :------- | :----------------------------------------- |
| base_symbol   | String  | Yes      | Base chain symbol                         |
| contract_address | String | Yes    | NFT contract address                      |
| token_id         | String | Yes    | NFT token ID                              |
| nft_name         | String | Yes    | NFT name, when absent, use "# + tokenId"  |
| image            | String | Yes    | URL or base64 of NFT image or video       |
| image_type       | String | Yes    | NFT image or video type, e.g., ".png", ".mp4" |
| is_video         | bool   | Yes    | Indicates if it's a video. `true` if it's a video, `false` otherwise |



# Transaction Notification

## Overview



`POST /user callback notification address`

> Request Example

```java
app_id=2128eb8de9e932a4376909f3d69424cc&data=SWYYr-LBVAmaS0eq8n-CUT_nHkM3OBxyWOsImMTe41UaqAoYI2ZghmaphXHov-7hsRsVmOhyPqC-JFuRGvonJKFd2Jirxv6Vn_8V40r_MMYTkhqcviQbZWYW5xX8Ai8CIpqas9fIWVDIYA_NKBl0UCJpwGxscxLNpjq5Z8-BTyIYDsVBquM9zEQGBCfcA7szD9n2fN_loSkoexlwqV8wg9HIZO5yQ6utZ_Kt0lNDQQb8zn8BwfAvsEsbJlOINUAqhxh1vV_AJ4bXn2uYx8TaYcBht-n_ZcBdxIDt975dbOFUiH-oCzIuDi1oLDtb4EylfCvhU5E4ozel_lQ-6cyIG0Dqiiyx0RFFOCJzPSXIoV031pvoa8pTCpkWklh8mRw1rylBgeZtqSxpnJO2_u2RIlXq6Hs8Yly9CmhIXaSrUgPir0h6xVxlf4VC6PFVCkiiTlp0kZ_H_UbKm0nUis3v3U2sflWJ2C449waSrikhuxVrFAQ6PQmrFVCAE6MYXNrFXJQuam2HAIQNSGbFQjspw8b_bXyfyZMGZ3K2oBC4I_v3eETTdPe0pfSNJb-5g37K0tOAr_UFbWK8pkC8yl56fSjn8tcR3yCRWwoi8jxTcUBiswTtvXZtzgG4dyzkaHXjsZjSGiywXSqP76VZWlyOmAx6IDSViLcPLPISdU3ruCI
```



#### Common Request Parameters

| Param  | Type   | Requried | Description                                                  |
| :----- | :----- | :------- | :----------------------------------------------------------- |
| app_id | String | Yes      | merchant unique identifier                                   |
| data   | String | Yes      | encrypted String, decrypted format is defined as `Decrypted Request Parameters` |



#### Common Response

Return string: `SUCCESS` means SUCCESS, `FAILURE` means FAILURE (note that the return parameter does not need to be encrypted here)




## Transfer Notification

#### Decrypted Request Parameters 

| Param            | Type    | Requried | Description                                                  |
| :--------------- | :------ | :------- | :----------------------------------------------------------- |
| charset          | String  | Yes      | Encoding format, no special circumstances, pass parameter `utf-8` |
| side             | String  | Yes      |Notification type: Receive notification: `deposit`, Transfer notification: `withdraw`, Web3 transaction notification: `web3-trans`|
| notify_time      | String  | Yes      | Notification time，example：2022-11-02 11:04:05              |
| id               | String  | Yes      | transfer id, example: 12345                                  |
| request_id       | String  | Yes      | The unique identifier for transferring coins                 |
| sub_wallet_id    | String  | Yes      | Sub wallet id                                                |
| symbol           | String  | Yes      | The unique identifier of the coin, example: USDTERC20        |
| amount           | String  | Yes      | transfer amount, for example: 1.23                           |
| fee_symbol       | String  | Yes      | gas fee coins，example：ETH                                  |
| fee              | String  | Yes      | gas fee，example：0.00123                                    |
| real_fee         | String  | Yes      | The actual gas fee consumed，example：0.00111                |
| created_at       | Long    | Yes      | Created time timestamp, example: 2006-01-02 15:04:05                                       |
| updated_at       | Long    | Yes      | Modified time timestamp, example: 2006-01-02 15:04:05                                      |
| address_from     | String  | Yes      | from account address                                         |
| address_to       | String  | Yes      | to account address                                           |
| memo             | String  | No       | to account address memo，example：123321                     |
| txid             | String  | Yes      | Transaction hash                                             |
| confirmations    | Integer | Yes      | Number of block confirmations，example：10                   |
| status           | Integer | Yes      | transfer status: `1000` awaiting approval, `1100` Approved while awaiting signature, `1200` Payment in progress, `2000`Payment completed, `2100` Not Approved, `2200` Rejected, `2300` Transaction discarded, `2400`Payment failed |
| transfer_source  | Integer | Yes      | transfer Type：`1`app, `2`openapi                            |
| base_symbol      | String  | No       | The unique identifier of the main chain of the coin to be transferred, for example: ETH |
| contract_address | String  | No       | transfer coin's contract address                             |



## Receive Notification

#### Decrypted Request Parameters


| Param            | Type    | Requried | Description                                                  |
| :--------------- | :------ | :------- | :----------------------------------------------------------- |
| charset          | String  | Yes      | Encoding format, no special circumstances, pass parameter `utf-8` |
| side             | String  | Yes      | Notification type: Receive notification: `deposit`, Transfer notification: `withdraw`, Web3 transaction notification: `web3-trans` |
| notify_time      | String  | Yes      | Notification time，example：2022-11-02 11:04:05              |
| id               | String  | Yes      | receiving id                                                 |
| sub_wallet_id    | String  | Yes      | Sub wallet id                                                |
| symbol           | String  | Yes      | The unique identifier of the coin, example: USDTERC20        |
| amount           | String  | Yes      | receiving amount                                             |
| created_at       | Long    | Yes      | Created time timestamp, example: 2006-01-02 15:04:05         |
| updated_at       | Long    | Yes      | Modified time timestamp, example: 2006-01-02 15:04:05        |
| address_from     | String  | Yes      | from account address                                         |
| address_to       | String  | Yes      | to account address                                           |
| memo             | String  | No       | to account address memo，example：123321                     |
| txid             | String  | Yes      | Transaction hash                                             |
| confirmations    | Integer | Yes      | Number of block confirmations，example：10                   |
| status           | Integer | Yes      | receiving status: `1000` unconfirmed, `1100` confirmed (transaction block confirmed), `2000` completed (shown at account), `3000` abnormal |
| base_symbol      | String  | No       | The unique identifier of the main chain of the coin to be received, example：ETH |
| contract_address | String  | No       | received coin's contract address                             |



## Web3 Transaction Notification

#### Request Parameters

| Param            | Type   | Required | Description                                                  |
| :--------------- | :----- | :------- | :----------------------------------------------------------- |
| charset          | String | Yes      | Character encoding format. Use `utf-8` unless specified otherwise. |
| side             | String | Yes      | Notification type: Receive notification: `deposit`, Transfer notification: `withdraw`, Web3 transaction notification: `web3-trans` |
| notify_time      | String | Yes      | Notification time in the format: "YYYY-MM-DD HH:mm:ss"        |
| id               | String | Yes      | Deposit ID                                                   |
| request_id       | String | Yes      | Unique identifier for the transfer                            |
| sub_wallet_id    | String | Yes      | Sub-wallet ID                                                |
| main_chain_symbol| String | Yes      | Main chain coin symbol (unique identifier), e.g., ETH        |
| symbol           | String | No       | Currency symbol (unique identifier), e.g., USDTERC20          |
| amount           | String | Yes      | Transaction amount                                            |
| created_at       | String | Yes      | Creation time in the format: "YYYY-MM-DD HH:mm:ss"            |
| updated_at       | String | Yes      | Modification time in the format: "YYYY-MM-DD HH:mm:ss"        |
| address_from     | String | Yes      | Sender address                                               |
| address_to       | String | Yes      | Recipient address                                            |
| txid             | String | Yes      | Transaction hash                                             |
| confirmations    | String | Yes      | Number of confirmations                                      |
| status           | String | Yes      | Transfer status: 1000: Not approved, 1100: Approved, waiting for signature, 1200: Payment in progress, 2000: Payment completed, 2100: Approval rejected, 2200: Rejected, 2300: Transaction dropped, 2400: Payment failed |
| interactive_contract | String | Yes   | Interactive contract                                         |
| fee_symbol       | String | Yes      | Fee currency symbol, e.g., ETH                                |
| fee              | String | Yes      | Fee amount                                                   |
| real_fee         | String | Yes      | Actual fee consumed                                          |
| input_data       | String | Yes      | Hexadecimal data representing the parameters of the contract transaction |
| trans_type       | String | Yes      | Transaction type: 0: Authorization transaction, 1: Transfer transaction |
| dapp_img         | String | Yes      | Dapp image                                                   |
| dapp_name        | String | Yes      | Dapp name                                                    |
| dapp_url         | String | Yes      | Dapp access URL                                              |


# Co-signer



## Overview

Co-Signer can help you quickly connect to the **API**, but you need to deploy it on the server separately. Co-Signer needs to bind the **shard private key** of your wallet to create addresses and transaction signatures.



**Co-Signer** will call back your business system before the transaction is signed, and the signature can only be initiated after the authorization is passed, otherwise the transaction cannot be carried out.





## Docking Process

Co-Signer mainly implements two functions: creating addresses and automatic signatures. The specific process is as follows:

#### Create address:

<%= image_tag "ecreateaddress.png", style:"width: 350px" %>

#### Automated Signature:

<%= image_tag "esign.png", style:"width: 350px" %>





## Co-signer Callback



In order to ensure the security of the transaction, you need to configure a callback address of the business system in Co-Signer to authorize before the transaction is signed.

The authorized transaction data transmits in **clear text (no encryption)**, you need to ensure the communication security between the business system and Co-Signer in the application service.



### Transfer(Withdrawal) Callback

#### HTTP Request

POST /{url}

`Content-Type application/json;charset=UTF-8`


> Request 

```json
POST /callback/example

{
    "type":"sign_start",
    "transfer_id":321456,
    "request_id":"c70d1eebb7c687ec8d56bead73f104",
    "pending_round":false,
    "from":"0xc70d1eebb7c687ec8d56bead73f104d41e6e0bda",
    "to":"0x5EDc9177997Bf6B4db559A5C184051858B3B3704",
    "memo": "123321",
    "amount":167230.4978,
    "symbol":"BTC"
}
```


#### Callback Request Parameters


| Param         | Type    | Requried | Description                                                  |
| :------------ | :------ | :------- | :----------------------------------------------------------- |
| type          | String  | Yes      | Callback type, `sign_start`start signing，`sign_success`successfully signed. |
| transfer_id   | Integer | Yes      | transfer id, example: 12345                                  |
| request_id    | String  | Yes      | The unique identifier for initiating transfer                |
| pending_round | Bool    | Yes      | Speed Up status, `false` means in transferring transaction , `true` means speeding up the transaction |
| from          | String  | Yes      | from account address                                         |
| to            | String  | Yes      | to account address                                           |
| memo          | String  | No       | to account address memo，example：123321                     |
| amount        | Decimal | Yes      | Transaction amount                                           |
| symbol        | String  | Yes      | The unique identifier of the coin, example: USDTERC20        |
| txid          | String  | No       | Transaction hash. Returned when the signature is successful. |



### Web3 Transaction Callback

#### HTTP Request

POST /{url}

`Content-Type: application/json;charset=UTF-8`


> Callback Parameter Example

```json
POST /callback/example

{
    "type": "sign_start",
    "trans_id": 432,
    "request_id": "0000000003",
    "pending_round": false,
    "from": "0xc70d1eebb7c687ec8d56bead73f104d41e6e0bda",
    "to": "0x5EDc9177997Bf6B4db559A5C184051858B3B3704",
    "amount": 0,
    "main_chain_symbol": "HECO",
    "input_data": "0xca718c65",
    "interactive_contract": "0xe012F3957226894B1a2a44b3ef5070417a069dC2",
    "txid": ""
}
```

#### Callback Parameter Format:

| Param                | Type    | Required | Description                                         |
| :------------------- | :------ | :------- | :-------------------------------------------------- |
| type                 | String  | Yes      | Callback type: `sign_start` for signature initiation, `sign_success` for successful signature |
| trans_id             | Integer | Yes      | Transaction ID                                      |
| request_id           | String  | Yes      | Unique identifier for the transaction                |
| pending_round        | Boolean | Yes      | Acceleration status: `true` for accelerated transactions, `false` for regular transactions |
| from                 | String  | Yes      | Sender address of the transaction                    |
| to                   | String  | Yes      | Recipient address of the transaction                 |
| amount               | Decimal | Yes      | Transaction amount. Use `-1` for infinity            |
| main_chain_symbol    | String  | Yes      | Main chain symbol (unique identifier), e.g., "ETH"   |
| input_data           | String  | Yes      | Input data for the transaction                       |
| interactive_contract | String  | Yes      | Interactive contract                                 |
| txid                 | String  | No       | Transaction hash. Returned when the signature is successful  |


#### Common Response for Callback

Return string: `SUCCESS` means SUCCESS, `FAILURE` means FAILURE







# Error Code

| Code    | Message                          |
| ------- | -------------------------------- |
| 0       | Success                          |
| 100001  | System Error                     |
| 100004  | Invalid Request Parameters       |
| 100005  | Signature Verification Failed    |
| 100007  | Invalid IP                       |
| 100011  | Insufficient Balance             |
| 100015  | Invalid Merchant ID              |
| 100016  | Expired Merchant Information     |
| 110055  | Invalid Transfer Address         |
| 110088  | Duplicate Request                |
| 110160  | Registration Failed              |
| 110161  | Exceeded Maximum Precision       |
| 110227  | Transfer Suspended for Currency  |
| 120202  | Unsupported Currency             |
| 120204  | Failed to Build Transaction      |
| 200004  | No Permission to Perform Action  |
| 200005  | Wallet Does Not Exist            |
| 200007  | Creating Sub-wallet, Please Wait |
| 200008  | Exceeded Maximum Number of Sub-wallets |
| 200011  | Currency Address Already Exists  |
| 200013  | Node Configuration Error, Please Contact Customer Service |
| 200015  | Signature Failed                 |
| 200025  | Processing, Please Wait          |
| 200040  | Wallet Has Expired               |
| 200066  | Maximum 1000 Transactions Allowed |
| 200067  | Name Exceeds Maximum Length       |
| 210003  | Order Does Not Exist             |
| 3040006 | Cannot Transfer to Yourself       |
| 200071 | Acceleration is not supported on this main chain. |
| 200072 | Transaction type is not supported by the sub-wallet type. |







